openapi: 3.0.1
info:
  title: Payment Initiation API
  description: API to initiate a simple payment.
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/LIAMFORDAU/submit-payent/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://api.example.com
  description: Example API server
paths:
  /api/payments/v1/submit-payment:
    post:
      summary: Initiate a payment
      description: Initiates a simple payment.
      operationId: initiatePayment
      parameters:
      - name: X-Correlation-ID
        in: header
        description: Correlation ID for the request
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: X-Idempotency-Key
        in: header
        description: Idempotency key for the request
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
        required: true
      responses:
        "201":
          description: Payment initiated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        "200":
          description: Payment initiated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/payments/v1/payment-status/{paymentId}:
    get:
      summary: Get payment status
      description: Returns the payment status and optionally includes activities.
      operationId: getPaymentStatus
      parameters:
      - name: X-Correlation-ID
        in: header
        description: Correlation ID for the request
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: paymentId
        in: path
        description: ID of the payment
        required: true
        schema:
          type: string
      - name: includeActivities
        in: query
        description: Flag to include activities in the response
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Payment status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentStatusResponse'
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/payments/v1/cross-border-payment:
    post:
      summary: Initiate a cross-border payment
      description: Initiates an international payment between different currencies
      operationId: initiateCrossBorderPayment
      parameters:
        - name: X-Correlation-ID
          in: header
          description: Correlation ID for the request
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: X-Idempotency-Key
          in: header
          description: Idempotency key for the request
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrossBorderPaymentRequest'
        required: true
      responses:
        "200":
          description: Cross-border payment initiated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
components:
  schemas:
    PaymentRequest:
      required:
      - amount
      - creditor
      - currency
      - debtor
      type: object
      properties:
        debtor:
          $ref: '#/components/schemas/Account'
        creditor:
          $ref: '#/components/schemas/Account'
        amount:
          type: number
          description: Amount to be transferred
          example: 100.5
        currency:
          type: string
          description: Currency of the amount
          example: USD
        paymentReference:
          type: string
          description: Reference for the payment
          example: INV123456
        paymentDate:
          type: string
          description: Date of the payment
          format: date
          example: 2023-10-01
        priority:
          type: string
          description: Priority of the payment
          enum:
            - HIGH
            - NORMAL
            - LOW
          default: NORMAL
          example: NORMAL
    CrossBorderPaymentRequest:
      type: object
      required:
        - paymentReference
        - customer
        - beneficiary
        - transactionDetails
        - fees
      properties:
        paymentReference:
          type: string
          example: "PAY-12345"
        customer:
          type: object
          required:
            - customerId
            - name
            - accountNumber
            - bankCode
            - currency
            - debitAmount
          properties:
            customerId:
              type: string
              example: "CUST-67890"
            name:
              type: string
              example: "John Doe"
            accountNumber:
              type: string
              example: "1234567890"
            bankCode:
              type: string
              example: "NABAU3M"
            currency:
              type: string
              example: "AUD"
            debitAmount:
              type: number
              format: double
              example: 1000.00
        beneficiary:
          type: object
          required:
            - name
            - accountNumber
            - bankCode
            - currency
          properties:
            name:
              type: string
              example: "Jane Smith"
            accountNumber:
              type: string
              example: "9876543210"
            bankCode:
              type: string
              example: "HSBCUK3M"
            currency:
              type: string
              example: "GBP"
        transactionDetails:
          type: object
          required:
            - exchangeRate
            - foreignCurrencyAmount
            - purpose
            - initiatedDate
          properties:
            exchangeRate:
              type: number
              format: double
              example: 0.55
            foreignCurrencyAmount:
              type: number
              format: double
              example: 550.00
            purpose:
              type: string
              example: "Invoice Payment #INV-789"
            initiatedDate:
              type: string
              format: date-time
              example: "2025-01-25T12:00:00Z"
            description:
              type: string
              example: "Cross-border payment for goods"
        fees:
          type: object
          required:
            - transferFee
            - totalDebit
          properties:
            transferFee:
              type: number
              format: double
              example: 10.00
            totalDebit:
              type: number
              format: double
              example: 1010.00
    Account:
      required:
      - accountNumber
      type: object
      properties:
        accountNumber:
          type: string
          description: Account number
          example: "123456789"
        accountName:
          type: string
          description: Account name
          example: John Doe
    PaymentResponse:
      type: object
      properties:
        paymentId:
          type: string
          description: Unique identifier for the payment
          example: "987654321"
        status:
          type: string
          description: ISO payment status
          example: ACTC
          enum:
          - ACTC
          - ACSP
          - ACSC
          - RJCT
    PaymentStatusResponse:
      type: object
      properties:
        paymentId:
          type: string
          description: Unique identifier for the payment
          example: "987654321"
        workflow:
          type: string
          description: workflow for the payment
          example: "HighPriorityWorkflow"
        startTime:
          type: string
          format: date-time
          description: Time of the event
        endTime:
          type: string
          format: date-time
          description: Time of the event
        status:
          type: string
          description: ISO payment status
          example: ACTC
          enum:
          - ACTC
          - ACSP
          - ACSC
          - RJCT
        activities:
          type: array
          items:
            $ref: '#/components/schemas/activities'
    activities:
      type: object
      properties:
        activityName:
          type: string
          description: Name of the activity
        status:
          type: string
          description: Result of the activity
        startTime:
          type: string
          format: date-time
          description: Time of the event
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: Error code
          example: ERR001
        message:
          type: string
          description: Error message
          example: Invalid request parameters